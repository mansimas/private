<?php

namespace Admin\MedicalBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * SpecialofferSalesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SpecialofferSalesRepository extends EntityRepository
{
	/**
     * function updateData
     *
     * @param integer $snSaleId              saleid
	 * @param integer $snPaypaltranscationId paypal transactionid
	 * @param string  $ssPaypalStatus        paypal status 
     *
     * @todo   Function update spcialoffer sale data
     * @access public
     * @author Arpita Rana <arpita.j.php@gmail.com>
     * @return boolean
     */
    public function updateData($snSaleId, $snPaypaltranscationId, $ssPaypalStatus)
    {
        if(is_numeric($snSaleId) && $snSaleId != '')
		{	
			return $asData = $this->getEntityManager()
							->createQuery("update AdminMedicalBundle:SpecialofferSales u set u.checked_by_admin = 'No', u.paypal_transaction_id = '".$snPaypaltranscationId."', u.paypal_payment_status = '".$ssPaypalStatus."' where u.id = ".$snSaleId)
							->execute();
		}
		else
		{
			return false;
		}
    }
	
	/**
     * function updateDataByField
     *
     * @param integer $snSpecialOfferId specialofferid.
     *
     * @todo   Function update data by given field.
     * @access public
     * @author Arpita Rana <arpita.j.php@gmail.com>
     * @return boolean
     */
    public function updateDataByField($snSpecialOfferId)
    {
        if(is_numeric($snSpecialOfferId) && $snSpecialOfferId != '')
		{	
			return $asData = $this->getEntityManager()
							->createQuery("update AdminMedicalBundle:SpecialofferSales u set u.checked_by_admin = 'Yes' where u.specialoffers = ".$snSpecialOfferId)
							->execute();
		}
		else
		{
			return false;
		}
    }
	
	/**
     * function countByCheckedAdmin
     *      	 
     *
     * @todo   Function get paid reservation count.
     * @access public
     * @author Arpita Jadeja <arpita.j.php@gmail.com>
     * @return array
     */
	 public function countByCheckedAdmin() 
    {	
	
		return $ssQuery = $this->createQueryBuilder('sos')
							->select('SUM(sos.number_of_coupon) as new_sale_count')													
							->where('sos.checked_by_admin = :ssFlag')
							->andWhere('sos.paypal_payment_status = 1')
							->setParameter('ssFlag', 'No')
							->getQuery()
							->getArrayResult();		
	}
}