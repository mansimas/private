<?php

namespace Admin\MedicalBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * UserQuoteDetailRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserQuoteDetailRepository extends EntityRepository
{
	/**
     * function getUserQuoteDetail
     *    
     *
     * @todo   Function to get user quote details.
     * @access public
     * @author Arpita Jadeja <arpita.j.php@gmail.com>
     * @return array
     */
	public function getUserQuoteDetail() 
    {	
		return $ssQuery = $this->createQueryBuilder('uqd')
					->select('uqd','c')
					->leftJoin('uqd.categories','c')
					->orderBy('uqd.id','DESC')
					->getQuery()
					->getArrayResult();
	}
	
	/**
     * function updateDataByField
     *
     * @param array   $asIdQuotes     quote_id
     * @param integer $ssFieldName    field name
	 * @param integer $ssQuoteStatus  quote status
     *
     * @todo   Function to update field as given value.
     * @access public
     * @author Arpita Jadeja <arpita.j.php@gmail.com>
     * @return boolean
     */
	public function updateDataByField($asIdQuotes, $ssFieldName='', $ssQuoteStatus='') 
    {
        return $asData = $this->getEntityManager()
            ->createQuery("update AdminMedicalBundle:UserQuoteDetail uqd set uqd.".$ssFieldName." = '".$ssQuoteStatus."' where uqd.id IN (".implode(',',$asIdQuotes).") ")
            ->execute();
    }
	
	/**
     * function countByCheckedAdmin
     *     
     *
     * @todo   Function to get count of checked by admin
     * @access public
     * @author Arpita Jadeja <arpita.j.php@gmail.com>
     * @return array
     */
	 public function countByCheckedAdmin() 
    {	
		return $ssQuery = $this->createQueryBuilder('so')
							->select('COUNT(so.id) as new_quote_count')
							->where('so.checked_by_admin = :ssFlag')
							->setParameter('ssFlag', 'No')
							->getQuery()
							->getArrayResult();
	}
	
	/**
     * function updateCheckedByAdminField
     *
     * @param integer $snIdSpecialOffers  specialofferid
     * @param integer $ssFieldName        field name
     *
     * @todo   Function to update checkedbyadmin field
     * @access public
     * @author Arpita Jadeja <arpita.j.php@gmail.com>
     * @return boolean
     */
	public function updateCheckedByAdminField($snIdSpecialOffers, $ssFieldName='checked_by_admin') 
    {
        return $asData = $this->getEntityManager()
            ->createQuery("update AdminMedicalBundle:UserQuoteDetail ucq set ucq.".$ssFieldName." = 'Yes' where ucq.checked_by_admin = 'No' and ucq.id = ".$snIdSpecialOffers)
            ->execute();
    }
}