<?php

namespace Admin\MedicalBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\Common\Persistence\ObjectManager;
/**
 * InsuranceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InsuranceRepository extends EntityRepository
{
	/**
     * function getNewsDetail
     *
     * @param array $asIds newsids     
     *
     * @todo   Function get newd detail to given ids.
     * @access public
     * @author Arpita Rana <arpita.j.php@gmail.com>
     * @return array
     */
	public function getInsurancesDetail($asIds)
    {
        return $asData = $this->getEntityManager()
            ->createQuery('SELECT c FROM AdminMedicalBundle:Insurance c where c.id IN ('.$asIds.')')
            ->getArrayResult();        
    }
	
	/**
     * function deleteData
     *
     * @param array $asIds field name     
     *
     * @todo   Function delete insurance detail
     * @access public
     * @author Arpita Jadeja <arpita.j.php@gmail.com>
     * @return boolean
     */
    public function deleteData($asIds) 
    {
        return $asData = $this->getEntityManager()
							  ->createQuery('Delete FROM AdminMedicalBundle:Insurance i where i.id IN ('.$asIds.')')
							  ->execute();
    }
	
	/**
     * function getInsuranceTranslationDetail
     *
     * @param string  $ssLocale current culture
     * @param boolean $ssFlag   flag
     *
     * @todo   Function to get except first five insurance companies who are assigned to most clinics.
     * @access public
     * @author Arpita Jadeja <arpita.j.php@gmail.com>
     * @return array
     */
	public function getInsuranceTranslationDetail($ssLocale, $ssFlag='') 
    {	
		if($ssFlag)
		{
			$asLatestFiveInsuranceIds = 0;
		}
		else
		{
			$asLatestFiveInsurance = $this->getEntityManager()->getRepository('AdminMedicalBundle:Company')->getInsuranceDetail($ssLocale);
			$asLatestFiveInsuranceIds = implode(", ", array_keys($asLatestFiveInsurance));			
		}
		return $ssQuery = $this->createQueryBuilder('i')
					->select('i')
					->where('i.id NOT IN ('.$asLatestFiveInsuranceIds.')')									
					->getQuery()					
					->setHint(\Doctrine\ORM\Query::HINT_CUSTOM_OUTPUT_WALKER,'Gedmo\\Translatable\\Query\\TreeWalker\\TranslationWalker')
					->setHint(\Gedmo\Translatable\TranslatableListener::HINT_TRANSLATABLE_LOCALE, $ssLocale)
					->getResult();			
	}
}