<?php

namespace Admin\MedicalBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * TestimonialRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TestimonialRepository extends EntityRepository
{
	/**
     * function getAllTestimonialVideoDetail
     *   
	 * @param string $ssLocale locale
     *
     * @todo   Function to get testimonial video detail.
     * @access public
     * @author Arpita Jadeja <arpita.j.php@gmail.com>
     * @return array
     */
    public function getAllTestimonialVideoDetail($ssLocale='en')
    {
		return $ssQuery = $this->createQueryBuilder('t')
						->select('t')						
						->getQuery()					    
					    ->setHint(\Doctrine\ORM\Query::HINT_CUSTOM_OUTPUT_WALKER,'Gedmo\\Translatable\\Query\\TreeWalker\\TranslationWalker')
						->setHint(\Gedmo\Translatable\TranslatableListener::HINT_TRANSLATABLE_LOCALE, $ssLocale)
						->getArrayResult();
	}
	
	/**
     * function getAllTestimonialVideoDetail
     *   
	 * @param string $ssLocale locale
     *
     * @todo   Function to get latest testimonial.
     * @access public
     * @author Arpita Jadeja <arpita.j.php@gmail.com>
     * @return array
     */
    public function getLatestTestimonial($ssLocale='en')
    {
		return $asData = $this->createQueryBuilder('t')							
								 ->select('t')								 
								 ->setMaxResults(1)
								 ->orderBy('t.id','DESC')
								 ->getQuery()						
								 ->setHint(\Doctrine\ORM\Query::HINT_CUSTOM_OUTPUT_WALKER,'Gedmo\\Translatable\\Query\\TreeWalker\\TranslationWalker')
								 ->setHint(\Gedmo\Translatable\TranslatableListener::HINT_TRANSLATABLE_LOCALE, $ssLocale)
								 ->getArrayResult();
	}
	
	/**
     * function deleteData
     *   
	 * @param array $asIds testimonial ids
     *
     * @todo   Function to delete testimonial data.
     * @access public
     * @author Arpita Jadeja <arpita.j.php@gmail.com>
     * @return boolean
     */
	public function deleteData($asIds) 
    {
        $asData = $this->getEntityManager()
            ->createQuery('Delete FROM AdminMedicalBundle:Testimonial i where i.id IN ('.$asIds.')')
             ->execute();
		return true;
    }
}